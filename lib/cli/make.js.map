{"version":3,"sources":["../../src/cli/make.js"],"names":["makeTemplate","templateName","currentDirectory","realpathSync","process","cwd","folderName","basename","prompt","type","name","message","white","default","green","when","answers","change","then","console","log","exit","catch","summary","errors"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAACC,YAAD,EAAkB;AACtC,KAAMC,mBAAmB,aAAGC,YAAH,CAAgBC,QAAQC,GAAR,EAAhB,CAAzB;AACA,KAAIJ,YAAJ,EAAkB;AACjB,SAAO,yBAAeC,gBAAf,EAAiCD,YAAjC,CAAP;AACA;AACD,KAAMK,aAAa,eAAKC,QAAL,CAAcL,gBAAd,CAAnB;AACA,QAAO,mBACLM,MADK,CACE,CACP;AACCC,QAAM,SADP;AAECC,QAAM,QAFP;AAGCC,wDAAoD,gBAAMC,KAAN,CAAYN,UAAZ,CAApD,MAHD;AAICO,WAAS;AAJV,EADO,EAOP;AACCJ,QAAM,OADP;AAECC,QAAM,MAFP;AAGCC,gBAAY,gBAAMG,KAAN,CAAY,mBAAZ,CAHb;AAICD,WAAS,eAJV;AAKCE,QAAM;AAAA,UAAWC,QAAQC,MAAR,KAAmB,IAA9B;AAAA;AALP,EAPO,CADF,EAgBLC,IAhBK,CAgBA,gBAAsB;AAAA,MAAnBD,MAAmB,QAAnBA,MAAmB;AAAA,MAAXP,IAAW,QAAXA,IAAW;;AAC3BS,UAAQC,GAAR,CAAY,EAAZ;AACA,SAAO,yBAAelB,gBAAf,EAAiCe,SAASP,IAAT,GAAgB,IAAjD,CAAP;AACA,EAnBK,CAAP;AAoBA,CA1BD;;kBA4Be,UAACT,YAAD,EAAkB;AAChCkB,SAAQC,GAAR,CAAY,+CAAZ;AACAD,SAAQC,GAAR,CAAY,EAAZ;AACApB,cAAaC,YAAb,EACEiB,IADF,CACO,YAAM;AACXC,UAAQC,GAAR,CAAY,EAAZ;AACAD,UAAQC,GAAR,CAAY,UAAZ;AACAhB,UAAQiB,IAAR;AACA,EALF,EAMEC,KANF,CAMQ,iBAAyB;AAAA,MAAtBC,OAAsB,SAAtBA,OAAsB;AAAA,MAAbC,MAAa,SAAbA,MAAa;;AAC/BL,UAAQC,GAAR,CAAY,EAAZ;AACA,8BAAYG,OAAZ,EAAqBC,UAAU,EAA/B;AACApB,UAAQiB,IAAR,CAAa,CAAb;AACA,EAVF;AAWA,C","file":"make.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport inquirer from 'inquirer';\nimport chalk from 'chalk';\nimport { createTemplate } from '../api';\nimport { printErrors } from '../utilities';\n\nconst makeTemplate = (templateName) => {\n\tconst currentDirectory = fs.realpathSync(process.cwd());\n\tif (templateName) {\n\t\treturn createTemplate(currentDirectory, templateName);\n\t}\n\tconst folderName = path.basename(currentDirectory);\n\treturn inquirer\n\t\t.prompt([\n\t\t\t{\n\t\t\t\ttype: 'confirm',\n\t\t\t\tname: 'change',\n\t\t\t\tmessage: `Do you want to change the template name ${chalk.white(folderName)}?`,\n\t\t\t\tdefault: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'input',\n\t\t\t\tname: 'name',\n\t\t\t\tmessage: `${chalk.green('Template\\'s Name:')}`,\n\t\t\t\tdefault: 'your-template',\n\t\t\t\twhen: answers => answers.change === true,\n\t\t\t},\n\t\t])\n\t\t.then(({ change, name }) => {\n\t\t\tconsole.log('');\n\t\t\treturn createTemplate(currentDirectory, change ? name : null);\n\t\t});\n};\n\nexport default (templateName) => {\n\tconsole.log('Creating a template from current directory...');\n\tconsole.log('');\n\tmakeTemplate(templateName)\n\t\t.then(() => {\n\t\t\tconsole.log('');\n\t\t\tconsole.log('Success!');\n\t\t\tprocess.exit();\n\t\t})\n\t\t.catch(({ summary, errors }) => {\n\t\t\tconsole.log('');\n\t\t\tprintErrors(summary, errors || []);\n\t\t\tprocess.exit(1);\n\t\t});\n};\n"]}