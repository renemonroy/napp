{"version":3,"sources":["../src/api.js"],"names":["getNAppRoot","join","__dirname","getRequiredTemplateFiles","requiredFiles","map","resolve","root","file","isSafeToCreateAppIn","validFiles","ignoredFiles","readdirSync","every","indexOf","isValidAppName","name","its","validForNewPackages","errors","concat","warnings","getTemplatesRegistryRoot","isValidTemplateTree","templateTree","validTree","getInstalledTemplates","JSON","parse","readFileSync","checkTemplateCandidate","directory","preferredName","step","Promise","reject","spinner","start","fail","summary","templateName","basename","appNameValidation","succeed","updateTemplatesRegistry","useSpinner","templates","templatesRoot","templatesList","filter","statSync","isDirectory","forEach","template","templateRoot","packageJSON","path","package","tree","writeJsonSync","useLocalTemplate","nappRoot","dir","templateDirectory","existsSync","console","log","error","white","process","exit","copySync","useRemoteTemplate","repository","options","err","message","trim","installTemplate","targetDirectory","templatePackage","packageObj","readJsonSync","filePath","match","createTemplate","then","registry","catch","e","destroyTemplates","templateId","removeSync","removeTemplates","checkRequiredFiles","files","currentFilePath","accessSync","F_OK","dirName","dirname","fileName","createDirectory","directoryName","appName","ensureDirSync","configurePackage","config","spinnerStr","currentPackage","currentPackageData","Object","assign","version","private","scripts","build","useBabel","dependencies","useEslint","devDependencies","eslint","writeFileSync","stringify","installDependencies","childProc","spawn","shell","cwd","stdio","on","code","defineEnvironmentConfig","env","configFiles","configName","extendName","predConfigRoot","filename","length","push","require","smart","setupCompiler","envConfig","handleStats","compiler","plugin","stats","toJson","compileAssets","run","compilation","CI","runDevServer","serverConfig","devServer","compress","clientLogLevel","contentBase","public","quiet","watchOptions","ignored","https","protocol","host","use","disableDotRule","htmlAcceptHeaders","middleware","listen","port","cyan","createApp","done","proc","Error","runApp","compilerStatsHandler","buildApp"],"mappings":"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","file":"api.js","sourcesContent":["/* eslint global-require: [0] */\n/* eslint import/no-dynamic-require: [0] */\nimport fs from 'fs-extra';\nimport path from 'path';\nimport childProcess from 'child_process';\nimport validatePackageName from 'validate-npm-package-name';\nimport chalk from 'chalk';\nimport ora from 'ora';\nimport dirTree from 'directory-tree';\nimport isSubset from 'obj-subset';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\nimport webpackMerge from 'webpack-merge';\nimport historyApiFallback from 'connect-history-api-fallback';\nimport downloadGitRepo from 'download-git-repo';\nimport merge from 'lodash.merge';\nimport paths from '../config/paths';\nimport settings from '../config/settings.json';\nimport templateConfig from '../config/template.json';\nimport { log, clearConsole } from './utilities';\n\n/**\n * NAPP RELATED\n * ==================================================================== */\n\nexport const getNAppRoot = () => (\n\tpath.join(__dirname, '..')\n);\n\nexport const getRequiredTemplateFiles = root => (\n\ttemplateConfig.requiredFiles.map(file => path.resolve(root, file))\n);\n\nexport const isSafeToCreateAppIn = (root) => {\n\tconst validFiles = templateConfig.ignoredFiles;\n\treturn fs.readdirSync(root).every(file => (\n\t\tvalidFiles.indexOf(file) >= 0\n\t));\n};\n\nexport const isValidAppName = (name) => {\n\tconst its = validatePackageName(name);\n\tif (!its.validForNewPackages) {\n\t\tconst errors = (its.errors || []).concat(its.warnings || []);\n\t\treturn `Sorry, ${errors.join(' and ')} .`;\n\t}\n\treturn true;\n};\n\n/**\n * TEMPLATES\n * ==================================================================== */\n\nexport const getTemplatesRegistryRoot = () => (\n\tpath.join(getNAppRoot(), 'templates/registry.json')\n);\n\nexport const isValidTemplateTree = templateTree => (\n\tisSubset(templateTree, templateConfig.validTree)\n);\n\nexport const getInstalledTemplates = () => (\n\tJSON.parse(fs.readFileSync(getTemplatesRegistryRoot(), 'utf8'))\n);\n\nexport const checkTemplateCandidate = (directory, preferredName, step = '') => (\n\tnew Promise((resolve, reject) => {\n\t\tconst spinner = ora(`${step} Validate template candidate`).start();\n\t\tif (!directory) {\n\t\t\tspinner.fail();\n\t\t\treject({ summary: 'No directory specified.' });\n\t\t}\n\t\tconst templateName = preferredName || path.basename(directory);\n\t\tconst appNameValidation = isValidAppName(templateName);\n\t\tif (appNameValidation !== true) {\n\t\t\tspinner.fail();\n\t\t\treject({\n\t\t\t\tsummary: 'Directory name should follow NPM naming convention.',\n\t\t\t\terrors: [appNameValidation],\n\t\t\t});\n\t\t}\n\t\tconst templateTree = dirTree(directory);\n\t\tif (!isValidTemplateTree(templateTree)) {\n\t\t\tspinner.fail();\n\t\t\treject({\n\t\t\t\tsummary: 'Project structure does not match minumum requirements',\n\t\t\t});\n\t\t} else {\n\t\t\tspinner.succeed();\n\t\t\tresolve(templateTree);\n\t\t}\n\t})\n);\n\nexport const updateTemplatesRegistry = (step = '') => (\n\tnew Promise((resolve) => {\n\t\tconst useSpinner = step !== '';\n\t\tlet spinner = null;\n\t\tif (useSpinner) {\n\t\t\tspinner = ora(`${step} Update templates registry`).start();\n\t\t}\n\t\tconst templates = {};\n\t\tconst templatesRoot = `${getNAppRoot()}/templates`;\n\t\tconst templatesList = fs.readdirSync(templatesRoot).filter(file => (\n\t\t\tfs.statSync(path.join(templatesRoot, file)).isDirectory()\n\t\t));\n\t\ttemplatesList.forEach((template) => {\n\t\t\tconst templateRoot = `${templatesRoot}/${template}`;\n\t\t\tconst packageJSON = `${templateRoot}/package.json`;\n\t\t\tconst templateTree = dirTree(templateRoot);\n\t\t\tif (isValidTemplateTree(templateTree)) {\n\t\t\t\ttemplates[template] = {\n\t\t\t\t\tpath: templateRoot,\n\t\t\t\t\tpackage: JSON.parse(fs.readFileSync(packageJSON, 'utf8')),\n\t\t\t\t\ttree: templateTree,\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tfs.writeJsonSync(getTemplatesRegistryRoot(), templates);\n\t\tif (useSpinner) {\n\t\t\tspinner.succeed();\n\t\t}\n\t\tresolve(templates);\n\t})\n);\n\nexport const useLocalTemplate = (templateName, directory, step = '') => {\n\tconst spinner = ora(`${step} Paste local template to new directory`).start();\n\tconst nappRoot = getNAppRoot();\n\tconst dir = path.resolve(directory, '.');\n\tconst templateDirectory = `${nappRoot}/templates/${templateName}`;\n\tif (!isSafeToCreateAppIn(dir) || !fs.existsSync(templateDirectory)) {\n\t\tspinner.fail();\n\t\tconsole.log('');\n\t\tlog.error(`The template ${chalk.white(templateName)} is not found or is invalid.`);\n\t\tprocess.exit(1);\n\t}\n\tfs.copySync(templateDirectory, dir);\n\tspinner.succeed();\n\treturn directory;\n};\n\nexport const useRemoteTemplate = (repository, directory, options, step = '') => (\n\tnew Promise((resolve, reject) => {\n\t\tconst spinner = ora(`${step} Paste remote template to new directory`).start();\n\t\tdownloadGitRepo(repository, directory, options, (err) => {\n\t\t\tif (err) {\n\t\t\t\tspinner.fail();\n\t\t\t\treject({\n\t\t\t\t\tsummary: `Failed to download repotory ${repository}`,\n\t\t\t\t\terrors: [err.message.trim],\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tspinner.succeed();\n\t\t\t\tresolve(directory);\n\t\t\t}\n\t\t});\n\t})\n);\n\n// export const useTemplateMiddleware = (appConfig, step = '') => (\n// \tnew Promise((resolve, reject) => {\n// \t\tconst { defaultTemplate } = settings;\n// \t\tconst { template = defaultTemplate } = appConfig;\n// \t\tresolve();\n// \t})\n// );\n\nexport const installTemplate = (templateDirectory, preferredName, step = '') => (\n\tnew Promise((resolve, reject) => {\n\t\tconst spinner = ora(`${step} Paste candidate into templates directory`).start();\n\t\tconst templateName = preferredName || path.basename(templateDirectory);\n\t\tconst templatesRoot = path.resolve(getNAppRoot(), 'templates/');\n\t\tconst targetDirectory = path.join(templatesRoot, templateName);\n\t\tconst templatePackage = path.join(templateDirectory, 'package.json');\n\t\tif (!fs.existsSync(templatePackage)) {\n\t\t\tspinner.fail();\n\t\t\treject({ summary: 'A file package.json wasn\\'t found in the template' });\n\t\t}\n\t\tif (fs.existsSync(targetDirectory)) {\n\t\t\tspinner.fail();\n\t\t\treject({ summary: `A template with name ${chalk.white(templateName)} already exists.` });\n\t\t} else {\n\t\t\tif (preferredName) {\n\t\t\t\tconst packageObj = fs.readJsonSync(templatePackage);\n\t\t\t\tfs.writeJsonSync(templatePackage, merge({}, packageObj, {\n\t\t\t\t\tname: preferredName,\n\t\t\t\t}));\n\t\t\t}\n\t\t\tfs.copySync(templateDirectory, targetDirectory, {\n\t\t\t\tfilter: (filePath) => {\n\t\t\t\t\tif (filePath.match(/node_modules/) || filePath.match(/build/)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t});\n\t\t\tspinner.succeed();\n\t\t\tresolve(targetDirectory);\n\t\t}\n\t})\n);\n\nexport const createTemplate = (directory, preferredName) => (\n\tnew Promise((resolve, reject) => {\n\t\tPromise.resolve()\n\t\t\t.then(() => checkTemplateCandidate(directory, preferredName, '[1/3]'))\n\t\t\t.then(() => installTemplate(directory, preferredName, '[2/3]'))\n\t\t\t.then(() => updateTemplatesRegistry('[3/3]'))\n\t\t\t.then((registry) => {\n\t\t\t\tconst templateName = path.basename(directory);\n\t\t\t\tresolve(registry[templateName]);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\treject(e);\n\t\t\t});\n\t})\n);\n\nexport const destroyTemplates = (templates = [], step = '') => (\n\tnew Promise((resolve) => {\n\t\tconst spinner = ora(`${step} Remove templates(s) from file system`).start();\n\t\tconst registry = getInstalledTemplates();\n\t\ttemplates.forEach((templateId) => {\n\t\t\tif (registry[templateId]) {\n\t\t\t\tconst templateRoot = path.resolve(registry[templateId].path);\n\t\t\t\tupdateTemplatesRegistry();\n\t\t\t\tfs.removeSync(templateRoot);\n\t\t\t}\n\t\t});\n\t\tspinner.succeed();\n\t\tresolve();\n\t})\n);\n\nexport const removeTemplates = (templates = []) => (\n\tnew Promise((resolve, reject) => {\n\t\tPromise.resolve()\n\t\t\t.then(() => destroyTemplates(templates, '[1/2]'))\n\t\t\t.then(() => updateTemplatesRegistry('[2/2]'))\n\t\t\t.then(() => {\n\t\t\t\tresolve();\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\treject(e);\n\t\t\t});\n\t})\n);\n\n/**\n * PROJECTS RELATED\n * ==================================================================== */\n\nexport const checkRequiredFiles = (files, step = '') => (\n\tnew Promise((resolve, reject) => {\n\t\tconst spinner = ora(`${step} Check for required files`).start();\n\t\tlet currentFilePath = null;\n\t\ttry {\n\t\t\tfiles.forEach((filePath) => {\n\t\t\t\tcurrentFilePath = filePath;\n\t\t\t\tfs.accessSync(filePath, fs.F_OK);\n\t\t\t});\n\t\t\tspinner.succeed();\n\t\t\tresolve();\n\t\t} catch (err) {\n\t\t\tconst dirName = path.dirname(currentFilePath);\n\t\t\tconst fileName = path.basename(currentFilePath);\n\t\t\tspinner.fail();\n\t\t\treject({\n\t\t\t\tsummary: 'Couldn\\'t find a required file:',\n\t\t\t\terrors: [`${fileName} at ${dirName}`],\n\t\t\t});\n\t\t}\n\t})\n);\n\nexport const createDirectory = (directoryName, dir, step = '') => {\n\tconst spinner = ora(`${step} Create or use directory ${chalk.white(directoryName)}`).start();\n\tconst directory = path.resolve(dir || '', directoryName);\n\tconst appName = path.basename(directory);\n\tfs.ensureDirSync(directory);\n\tif (!isSafeToCreateAppIn(directory)) {\n\t\tspinner.fail();\n\t\tconsole.log('');\n\t\tlog.error(\n\t\t\t`The directory ${chalk.white(appName)} contains files that could conflict.`,\n\t\t\t'Try using a new directory name.',\n\t\t);\n\t\tprocess.exit(1);\n\t}\n\tspinner.succeed();\n\treturn directory;\n};\n\nexport const configurePackage = (config, directory, step = '') => {\n\tconst spinnerStr = `${step} Configure ${chalk.white('package.json')} with project's data`;\n\tconst spinner = ora(spinnerStr).start();\n\tconst currentPackage = path.resolve(directory, './package.json');\n\tlet currentPackageData = null;\n\tif (!fs.existsSync(currentPackage)) {\n\t\tspinner.fail();\n\t\tconsole.log('');\n\t\tlog.error('A package.json does not exist in the current directory.');\n\t\tprocess.exit(1);\n\t}\n\tcurrentPackageData = JSON.parse(fs.readFileSync(currentPackage, 'utf8'));\n\tconst packageJSON = Object.assign({}, currentPackageData, {\n\t\tname: config.name,\n\t\tversion: '0.1.0',\n\t\tprivate: true,\n\t\tscripts: {\n\t\t\tstart: 'napp run',\n\t\t\tbuild: 'napp build',\n\t\t},\n\t});\n\tif (settings.useBabel === true) {\n\t\tpackageJSON.dependencies['babel-polyfill'] = '*';\n\t}\n\tif (settings.useEslint === true) {\n\t\tpackageJSON.devDependencies.eslint = '*';\n\t\tif (settings.useBabel === true) {\n\t\t\tpackageJSON.devDependencies['babel-eslint'] = '*';\n\t\t}\n\t}\n\tfs.writeFileSync(currentPackage, JSON.stringify(packageJSON, null, 2));\n\tspinner.succeed();\n\treturn directory;\n};\n\nexport const installDependencies = (directory, step = '') => {\n\tconsole.log('');\n\tconsole.log('Installing project dependencies...');\n\tconsole.log('');\n\tconst childProc = childProcess.spawn('npm', ['install', '--silent'], {\n\t\tshell: true,\n\t\tcwd: path.resolve(directory, '.'),\n\t\tstdio: 'inherit',\n\t});\n\tchildProc.on('close', (code) => {\n\t\tconst spinner = ora(`${step} Install project dependencies`).start();\n\t\tif (code !== 0) {\n\t\t\tspinner.fail();\n\t\t\tconsole.log('');\n\t\t\tlog.error('Install process failed.');\n\t\t\tprocess.exit(1);\n\t\t}\n\t\tspinner.succeed();\n\t});\n\treturn childProc;\n};\n\nexport const defineEnvironmentConfig = (env = 'dev', directory, step = '') => (\n\tnew Promise((resolve) => {\n\t\tconst spinner = ora(`${step} Define environment configuration`).start();\n\t\tconst configFiles = [];\n\t\tconst configName = `webpack.config.${env}.js`;\n\t\tconst extendName = `webpack.extend.${env}.js`;\n\t\tconst predConfigRoot = path.join(getNAppRoot(), 'config/', configName);\n\t\tconst files = fs.readdirSync(directory).filter(filename => (\n\t\t\t(filename === configName) || (filename === extendName)\n\t\t));\n\t\tswitch (files.length) {\n\t\tcase 0:\n\t\t\tif (fs.existsSync(predConfigRoot)) {\n\t\t\t\tconfigFiles.push(require(predConfigRoot));\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tif (files[0] === configName) {\n\t\t\t\tconfigFiles.push(require(path.join(directory, configName)));\n\t\t\t} else if (files[0] === extendName && fs.existsSync(predConfigRoot)) {\n\t\t\t\tconfigFiles.push(\n\t\t\t\t\trequire(predConfigRoot),\n\t\t\t\t\trequire(path.join(directory, extendName)),\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tconfigFiles.push(\n\t\t\t\trequire(path.join(directory, configName)),\n\t\t\t\trequire(path.join(directory, extendName)),\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault:\n\t\t}\n\t\tif (configFiles.length === 0) {\n\t\t\tspinner.fail();\n\t\t\tlog.error(\n\t\t\t\t`No configuration found that includes \"${env}\" on its name.`,\n\t\t\t\t'Notice that the only predefined environments are \"dev\" and \"prod\".',\n\t\t\t);\n\t\t\tprocess.exit(1);\n\t\t} else {\n\t\t\tspinner.succeed();\n\t\t\tresolve(webpackMerge.smart(configFiles));\n\t\t}\n\t})\n);\n\n/**\n * COMPILER SETUP\n * ==================================================================== */\n\nexport const setupCompiler = (envConfig, handleStats, step = '') => (\n\tnew Promise((resolve) => {\n\t\tconst spinner = ora(`${step} Setup webpack compiler`).start();\n\t\tconst compiler = webpack(envConfig);\n\t\tcompiler.plugin('done', (stats) => {\n\t\t\tspinner.succeed();\n\t\t\thandleStats(stats.toJson({}, true));\n\t\t});\n\t\tresolve(compiler);\n\t})\n);\n\nexport const compileAssets = (config, step = '') => (\n\tnew Promise((resolve, reject) => {\n\t\tconst spinner = ora(`${step} Bundle scripts and styles`).start();\n\t\twebpack(config).run((err, stats) => {\n\t\t\tconst summary = 'Failed to compile.';\n\t\t\tif (err) {\n\t\t\t\tspinner.fail();\n\t\t\t\treject({ summary, errors: [err] });\n\t\t\t}\n\t\t\tif (stats.compilation.errors.length) {\n\t\t\t\tspinner.fail();\n\t\t\t\treject({ summary, errors: stats.compilation.errors });\n\t\t\t}\n\t\t\tif (process.env.CI && stats.compilation.warnings.length) {\n\t\t\t\tspinner.fail();\n\t\t\t\treject({ summary, errors: stats.compilation.warnings });\n\t\t\t}\n\t\t\tspinner.succeed();\n\t\t\tresolve(stats);\n\t\t});\n\t})\n);\n\nexport const runDevServer = (envConfig, serverConfig, handleStats, step = '') => (\n\tnew Promise((resolve, reject) => {\n\t\tconst spinner = ora(`${step} Configure compiler and dev server`).start();\n\t\tconst compiler = webpack(envConfig);\n\t\tcompiler.plugin('done', (stats) => {\n\t\t\tclearConsole();\n\t\t\thandleStats(stats.toJson({}, true), serverConfig);\n\t\t});\n\t\tconst devServer = new WebpackDevServer(compiler, {\n\t\t\tcompress: true,\n\t\t\tclientLogLevel: 'none',\n\t\t\tcontentBase: paths.public,\n\t\t\tquiet: true,\n\t\t\twatchOptions: {\n\t\t\t\tignored: /node_modules/,\n\t\t\t},\n\t\t\thttps: serverConfig.protocol === 'https',\n\t\t\thost: serverConfig.host,\n\t\t});\n\t\tdevServer.use(historyApiFallback({\n\t\t\tdisableDotRule: true,\n\t\t\thtmlAcceptHeaders: ['text/html', '*/*'],\n\t\t}));\n\t\tdevServer.use(devServer.middleware);\n\t\tdevServer.listen(serverConfig.port, (err) => {\n\t\t\tif (err) {\n\t\t\t\treject({ summary: err });\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\t\tconsole.log('');\n\t\t\tconsole.log(chalk.cyan('Starting dev server...'));\n\t\t\tconsole.log('');\n\t\t});\n\t\tspinner.succeed();\n\t\tresolve();\n\t})\n);\n\n/**\n * MAIN ACTIONS\n * ==================================================================== */\n\nexport const createApp = (config, done = () => {}) => {\n\tPromise.resolve()\n\t\t.then(() => createDirectory(config.name, '', '[1/4]'))\n\t\t.then(root => useLocalTemplate(config.template, root, '[2/4]'))\n\t\t.then(root => configurePackage(config, root, '[3/4]'))\n\t\t.then(root => installDependencies(root, '[4/4]'))\n\t\t.then((proc) => {\n\t\t\tproc.on('close', (code) => {\n\t\t\t\tif (code === 0) {\n\t\t\t\t\tconsole.log('');\n\t\t\t\t\tconsole.log('Success!');\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t\t.catch((e) => {\n\t\t\tthrow new Error(e);\n\t\t});\n};\n\nexport const runApp = (env, directory, serverConfig, compilerStatsHandler) => (\n\tnew Promise((resolve, reject) => {\n\t\tif (!directory) {\n\t\t\treject({ summary: 'No directory specified.' });\n\t\t}\n\t\tPromise.resolve()\n\t\t\t.then(() => defineEnvironmentConfig(env, directory, '[1/2]'))\n\t\t\t.then(envConfig => runDevServer(envConfig, serverConfig, compilerStatsHandler, '[2/2]'))\n\t\t\t.then(() => {\n\t\t\t\tresolve();\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\treject(e);\n\t\t\t});\n\t})\n);\n\nexport const buildApp = directory => (\n\tnew Promise((resolve, reject) => {\n\t\tif (!directory) {\n\t\t\treject({ summary: 'No directory specified.' });\n\t\t}\n\t\tPromise.resolve()\n\t\t\t.then(() => checkRequiredFiles(getRequiredTemplateFiles(directory), '[1/3]'))\n\t\t\t.then(() => defineEnvironmentConfig('prod', directory, '[2/3]'))\n\t\t\t.then(envConfig => compileAssets(envConfig, '[3/3]'))\n\t\t\t.then((stats) => {\n\t\t\t\tresolve(stats);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\treject(e);\n\t\t\t});\n\t})\n);\n"]}