{"version":3,"sources":["../src/index.js"],"names":["pkg","notify","version","usage","green","option","command","description","action","init","parseInt","run","build","alias","list","make","remove","console","log","red","parse","process","argv","refresh","config","join"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA,6BAAmB;AAClB,+BAAe,EAAEA,sBAAF,EAAf,EAAwBC,MAAxB;AACA;;AAED,oBACEC,OADF,mBAEEC,KAFF,CAEW,gBAAMC,KAAN,CAAY,WAAZ,CAFX,iBAGEC,MAHF,CAGS,cAHT,EAGyB,iCAHzB,EAIEA,MAJF,CAIS,eAJT,EAI0B,yBAJ1B;;AAMA,oBACEC,OADF,CACU,6BADV,EAEEC,WAFF,CAEc,mDAFd,EAGEC,MAHF,CAGS,cAAIC,IAHb;;AAKA,oBACEH,OADF,CACU,KADV,EAEEC,WAFF,CAEc,qCAFd,EAGEF,MAHF,CAGS,kBAHT,EAG6B,yCAH7B,EAIEA,MAJF,CAIS,qBAJT,EAIgC,2BAJhC,EAI6DK,QAJ7D,EAKEF,MALF,CAKS,cAAIG,GALb;;AAOA,oBACEL,OADF,CACU,OADV,EAEEC,WAFF,CAEc,wDAFd,EAGEC,MAHF,CAGS,cAAII,KAHb;;AAKA,oBACEN,OADF,CACU,MADV,EAEEO,KAFF,CAEQ,IAFR,EAGEN,WAHF,CAGc,8BAHd,EAIEC,MAJF,CAIS,cAAIM,IAJb;;AAMA,oBACER,OADF,CACU,iBADV,EAEEO,KAFF,CAEQ,IAFR,EAGEN,WAHF,CAGc,qCAHd,EAIEC,MAJF,CAIS,cAAIO,IAJb;;AAMA,oBACET,OADF,CACU,kCADV,EAEEO,KAFF,CAEQ,IAFR,EAGEN,WAHF,CAGc,mCAHd,EAIEC,MAJF,CAIS,cAAIQ,MAJb;;AAMA,oBACEV,OADF,CACU,GADV,EAEEC,WAFF,CAEc,+BAFd,EAGEC,MAHF,CAGS;AAAA,QAAMS,QAAQC,GAAR,CAAY,gBAAMC,GAAN,CAAU,IAAV,CAAZ,EAA6B,iBAA7B,CAAN;AAAA,CAHT;;AAKA,oBACEC,KADF,CACQC,QAAQC,IADhB;;AAGA,IAAI,oBAAQC,OAAZ,EAAqB;AACpB;AACA;;AAED,IAAI,oBAAQC,MAAZ,EAAoB;AACnB,0BAAS,eAAKC,IAAL,CAAU,uBAAV,EAAyB,sBAAzB,CAAT;AACA","file":"index.js","sourcesContent":["import path from 'path';\nimport program from 'commander';\nimport chalk from 'chalk';\nimport updateNotifier from 'update-notifier';\nimport cli from './cli';\nimport pkg, { version } from '../package.json';\nimport { getNAppRoot, updateTemplatesRegistry } from './api';\nimport { openFile } from './utilities';\nimport { notifyUpdates } from '../config/settings.json';\n\nif (notifyUpdates) {\n\tupdateNotifier({ pkg }).notify();\n}\n\nprogram\n\t.version(version)\n\t.usage(`${chalk.green('<command>')} [options]`)\n\t.option('-c, --config', 'Open settings in default editor')\n\t.option('-r, --refresh', 'Update common utilities');\n\nprogram\n\t.command('init [projectName] [source]')\n\t.description('Initialize a new project inside current directory')\n\t.action(cli.init);\n\nprogram\n\t.command('run')\n\t.description('Run the project within a dev server')\n\t.option('-e, --env <name>', 'The environment\\'s configuration to use')\n\t.option('-p, --port <number>', 'Port to use on dev server', parseInt)\n\t.action(cli.run);\n\nprogram\n\t.command('build')\n\t.description('Build bundles of scripts and styles in production mode')\n\t.action(cli.build);\n\nprogram\n\t.command('list')\n\t.alias('ls')\n\t.description('List all templates installed')\n\t.action(cli.list);\n\nprogram\n\t.command('make [template]')\n\t.alias('mk')\n\t.description('Make a template from current folder')\n\t.action(cli.make);\n\nprogram\n\t.command('remove [template] [templates...]')\n\t.alias('rm')\n\t.description('Remove templates from file system')\n\t.action(cli.remove);\n\nprogram\n\t.command('*')\n\t.description('Unknown commands return error')\n\t.action(() => console.log(chalk.red('>>'), 'Unknown command'));\n\nprogram\n\t.parse(process.argv);\n\nif (program.refresh) {\n\tupdateTemplatesRegistry();\n}\n\nif (program.config) {\n\topenFile(path.join(getNAppRoot(), 'config/settings.json'));\n}\n"]}